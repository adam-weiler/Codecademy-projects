--Write the following queries:
-- SELECT * FROM trips;
-- SELECT * FROM riders;
-- SELECT * FROM cars;
-- SELECT * FROM riders2;
--Shows data from the 4 tables.

-- SELECT riders.first, riders.last, cars.model
-- FROM riders
-- CROSS JOIN cars;
--Combines each user with every car model; not very useful.

-- SELECT trips.date, trips.pickup, trips.dropoff, trips.type, trips.cost, riders.first, riders.last, riders.username
-- FROM trips
-- LEFT JOIN riders
-- 	ON trips.rider_id = riders.id;
--Shows a trip log using some data from trips table, some data from riders table.
--Makes the join where rider_id (trips table) equals id (riders table).

-- SELECT *
-- FROM trips
-- JOIN cars
-- 	ON trips.car_id = cars.id;
--Shows link between trips and cars.
--Makes the join On car_id (trips table) where it equals id (cars table).

-- SELECT * FROM riders
-- UNION
-- SELECT * FROM riders2;
--Combines riders table with riders2 table.


--Bonus Questions! Queries and Aggregates:
-- SELECT ROUND(AVG(cost), 2)
-- FROM trips;
--Shows the average cost per trip, rounded to 2 decimal places. Returns 31.92.

-- SELECT * FROM riders
-- WHERE total_trips < 500
-- UNION
-- SELECT * FROM riders2
-- WHERE total_trips < 500;
--Shows all riders who have used REBU less than 500 times.

-- SELECT COUNT(*)
-- FROM cars
-- WHERE status = 'active';
--Shows all cars that are active. Returns 3.

SELECT *
FROM cars
ORDER BY trips_completed DESC
LIMIT 2;
--Shows the 2 cars that have the highest trips_completed.
